(
game
 
"Annuvin" 
(
players
 
1
) 
(
equipment
 
{
(
board
 
(
rotate
 
30.0 
(
hex
 
6
)
)
) 
 
(
piece
 
"Ball" 
Each 
(
move
 
Slide 
(
between
 
(
max
 
(
if
 
(
=
 
Undefined 
(
value
 
Player 
Mover
)
) 
1 
(
value
 
Player 
Mover
)
)
) 
if:
(
not
 
(
is
 
Enemy 
(
who
 
at:
(
between
)
)
)
)
) 
(
to
 
if:
(
is
 
Enemy 
(
who
 
at:
(
to
)
)
) 
(
apply
 
if:
(
not
 
(
is
 
Friend 
(
who
 
at:
(
to
)
)
)
) 
(
if
 
(
is
 
Enemy 
(
who
 
at:
(
to
)
)
) 
(
remove
 
(
to
) 
(
then
 
(
set
 
Value 
Next 
(
+
 
(
value
 
Player 
Next
) 
1
)
)
)
)
)
)
) 
(
then
 
(
if
 
(
<=
 
(
-
 
(
if
 
(
=
 
Undefined 
(
value
 
Player 
Mover
)
) 
1 
(
value
 
Player 
Mover
)
) 
(
count
 
Steps 
(
last
 
From
) 
(
last
 
To
)
)
) 
4
) 
(
set
 
Value 
Mover 
(
-
 
9 
(
count
 
Pieces 
Mover
)
)
) 
(
and
 
(
set
 
Value 
Mover 
(
-
 
(
if
 
(
=
 
Undefined 
(
value
 
Player 
Mover
)
) 
1 
(
value
 
Player 
Mover
)
) 
(
count
 
Steps 
(
last
 
From
) 
(
last
 
To
)
)
)
) 
(
moveAgain
)
)
)
)
)
) 
 
(
hand
 
Each
)
}
) 
(
rules
 
(
start
 
{
(
place
 
"Ball1" 
(
difference
 
(
union
 
{
(
sites
 
Side 
NW
) 
 
(
sites
 
Side 
NE
) 
 
(
expand
 
(
sites
 
Side 
N
)
)
}
) 
(
union
 
(
sites
 
Left
) 
(
sites
 
Right
)
)
)
) 
 
(
place
 
"Ball2" 
(
difference
 
(
union
 
{
(
sites
 
Side 
SW
) 
 
(
sites
 
Side 
SE
) 
 
(
expand
 
(
sites
 
Side 
S
)
)
}
) 
(
union
 
(
sites
 
Left
) 
(
sites
 
Right
)
)
)
)
}
) 
(
play
 
(
if
 
(
is
 
Prev 
Mover
) 
(
move
 
Slide 
(
from
 
(
last
 
To
)
) 
(
between
 
(
max
 
(
if
 
(
=
 
Undefined 
(
value
 
Player 
Mover
)
) 
3 
(
value
 
Player 
Mover
)
)
) 
if:
(
not
 
(
is
 
Enemy 
(
who
 
at:
(
between
)
)
)
)
) 
(
to
 
if:
(
is
 
Enemy 
(
who
 
at:
(
to
)
)
) 
(
apply
 
if:
(
not
 
(
is
 
Friend 
(
who
 
at:
(
to
)
)
)
) 
(
if
 
(
is
 
Enemy 
(
who
 
at:
(
to
)
)
) 
(
remove
 
(
to
) 
(
then
 
(
set
 
Value 
Next 
(
+
 
(
value
 
Player 
Next
) 
2
)
)
)
)
)
)
) 
(
then
 
(
if
 
(
<=
 
(
-
 
(
if
 
(
=
 
Undefined 
(
value
 
Player 
Mover
)
) 
2 
(
value
 
Player 
Mover
)
) 
(
count
 
Steps 
(
last
 
From
) 
(
last
 
To
)
)
) 
1
) 
(
set
 
Value 
Mover 
(
-
 
9 
(
count
 
Pieces 
Mover
)
)
) 
(
and
 
(
set
 
Value 
Mover 
(
-
 
(
if
 
(
=
 
Undefined 
(
value
 
Player 
Mover
)
) 
2 
(
value
 
Player 
Mover
)
) 
(
count
 
Steps 
(
last
 
From
) 
(
last
 
To
)
)
)
) 
(
moveAgain
)
)
)
)
) 
(
forEach
 
Piece
)
)
) 
(
end
 
(
if
 
(
or
 
(
and
 
(
=
 
1 
(
count
 
Pieces 
Next
)
) 
(
=
 
5 
(
count
 
Pieces 
Mover
)
)
) 
(
no
 
Pieces 
Next
)
) 
(
result
 
Mover 
Win
)
)
)
)
) 
